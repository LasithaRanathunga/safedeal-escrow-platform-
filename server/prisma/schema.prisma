// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int           @id @default(autoincrement())
  email     String        @unique
  password  String // hashed password
  name      String
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  token     refreshToken?
  contracts contract[]    @relation("UserContracts")
}

model refreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  user      user     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model contract {
  id          Int         @id @default(autoincrement())
  title       String
  description String
  owner       user        @relation("UserContracts", fields: [ownerId], references: [id])
  ownerId     Int
  seller      Int?
  buyer       Int?
  endDate     DateTime?
  amount      Float?
  status      String      @default("ACTIVE") // e.g., ACTIVE, COMPLETED
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  milestones  milestone[]
}

model milestone {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  amount      Float
  deadline    DateTime
  order       Int
  contractId  Int
  contract    contract @relation(fields: [contractId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
